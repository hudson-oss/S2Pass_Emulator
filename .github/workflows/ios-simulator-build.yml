name: iOS Simulator Build (Appetize)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14
    steps:
      - name: Checkout (full, with LFS & submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          submodules: recursive

      - name: Show repo tree (debug)
        run: |
          pwd
          ls -la
          find . -maxdepth 2 -name "*.xcodeproj" -print -exec ls -la {} \; || true

      - name: List schemes (Food Truck.xcodeproj)
        id: listschemes
        run: |
          if [ ! -d "Food Truck.xcodeproj" ]; then
            echo "❌ Food Truck.xcodeproj not found at repo root." >&2
            exit 1
          fi
          xcodebuild -list -project "Food Truck.xcodeproj"

      - name: Build (iOS Simulator, signing OFF)
        env:
          CONFIG: Release
          SDK: iphonesimulator
          DEST: 'platform=iOS Simulator,name=iPhone 15 Pro'
          DERIVED: ${{ github.workspace }}/build
        run: |
          set -euo pipefail
          # Try the most common scheme names in order
          for SCHEME in "Food Truck" "Food Truck iOS" "FoodTruck"; do
            echo "\n=== Trying scheme: $SCHEME ===\n"
            if xcodebuild \
              -project "Food Truck.xcodeproj" \
              -scheme "$SCHEME" \
              -sdk "$SDK" \
              -configuration "$CONFIG" \
              -destination "$DEST" \
              -derivedDataPath "$DERIVED" \
              CODE_SIGNING_ALLOWED=NO \
              build; then
              echo "\n✅ Built with scheme: $SCHEME" && echo "$SCHEME" > "$GITHUB_WORKSPACE/.chosen_scheme"
              break
            else
              echo "\n⚠️ Build failed for scheme: $SCHEME — will try next"
            fi
          done
          if [ ! -f "$GITHUB_WORKSPACE/.chosen_scheme" ]; then
            echo "❌ All candidate schemes failed. See logs above for the first real error." >&2
            exit 1
          fi

      - name: Zip .app for Appetize
        run: |
          set -euo pipefail
          APP_DIR="$GITHUB_WORKSPACE/build/Build/Products/${CONFIG}-iphonesimulator"
          echo "Looking in: $APP_DIR"
          ls -la "$APP_DIR" || true
          APP_PATH=$(echo "$APP_DIR"/*.app | head -n1)
          if [ ! -d "$APP_PATH" ]; then
            echo "❌ No .app found. Check previous step for build errors and scheme name." >&2
            exit 1
          fi
          cd "$APP_DIR"
          ZIP_NAME=AppetizeBuild.app.zip
          zip -r "$ZIP_NAME" "$(basename "$APP_PATH")"
          mv "$ZIP_NAME" "$GITHUB_WORKSPACE/"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: appetize-simulator-app
          path: AppetizeBuild.app.zip
